// ⚠️ Warning: Strictly warning!
// Don't change the name of this file or your some commands won't work!

function cmdName() {
  return {
    name: ['categories'],
    alias: [],
    category: 'general',
    desc: "It's an autogenerated command only for system use."
  };
}


async function getCommand(pickRandom, prefix, command, anyaV2, pika){
require('../../config');
//  if (command == 'categories') return pika.reply("❌ Can't exicute an auto generated command.");
  const fs = require('fs');
  const path = require('path');
  const { tiny, fancy32 } = require('../lib/stylish-font');
  const currentVersion = require('../../package.json').version;
  const pluginsPath = path.join(__dirname, './');
  const plugins = {};

  fs.readdirSync(pluginsPath)
  .filter((file) => file.endsWith('.js'))
  .forEach((file) => {
    const pluginName = path.parse(file).name;
    plugins[pluginName] = require(path.join(pluginsPath, file));
  });

  function getCommandsByCategory(plugins, category) {
  const commands = [];
  for (const pluginGroupName in plugins) {
    const pluginGroup = plugins[pluginGroupName];
    const categoryName = pluginGroup.cmdName().category;
    if (categoryName === category) {
      const commandName = pluginGroup.cmdName().name;
      if (Array.isArray(commandName)) {
        commands.push(...commandName);
      } else {
        commands.push(commandName);
      }
    }
  }
  return commands;
}

 const commandsInCategory = getCommandsByCategory(plugins, command.split('menu')[0]);
  if (!commandsInCategory.length > 0) return pika.reply('❌ No such category exists in my database.');
  let mCate = `╭───❬ ${fancy32(ownername)} ❭─┄┄┈•\n`;
    mCate += `│   ╭───────┄┄┈•\n`;
    mCate += `│ 👤 *${tiny("Botname")} :* ${botname}\n`;
    mCate += `│ 🎏 *${tiny("Version")} :* v${currentVersion}\n`;
    mCate += `│ ⛩️ *${tiny("Category")} :* ${command}\n`;
    mCate += `│ ✨ *${tiny("Commands")} :* ${commandsInCategory.length}\n`;
    mCate += `│   ╰───────┄┄┈•\n`;
    mCate += `╰─────────────┄┄┈•\n\n`;    
    mCate += `\`\`\`🔖 Commands from mentioned category:\`\`\`\n\n`;
    mCate += `╭──⌈ コマンド/メニュー ⌋─╼⛦\n`;
    mCate += `│  ╭─┈•\n`;
   for (let i of commandsInCategory) {
    mCate += `│  │•${themeemoji} ${tiny(i)}\n`;
   }
    mCate += `│  ╰─────────⦁\n`;
    mCate += `╰────────────────╼▣`;
    pika.reply(mCate +
               `\n\n_Type *${prefix}help <command>* to Know more._\n` +
               `*e.g:* ${prefix}help ${commandsInCategory[0]}`,
           );
      }
module.exports = { cmdName, getCommand }



